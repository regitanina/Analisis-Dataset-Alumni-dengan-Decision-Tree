# -*- coding: utf-8 -*-
"""Analisis Dataset Alumni dengan Decision Tree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l-lFvGpaZTd0V7VEtNq05htiiLbQQBBh
"""

import pandas as pd
df = pd.read_excel('Data_Alumni.xlsx')
df

meanIPK=df.IPK.mean()
meanTOEFL=df.Toefl.mean()
meanLama=df.Lama_tunggu.mean()
meanGaji=df.Gaji.mean()

df.IPK.fillna(meanIPK, inplace=True)
df.Toefl.fillna(meanTOEFL, inplace=True)
df.Lama_tunggu.fillna(meanLama, inplace=True)
df.Gaji.fillna(meanGaji, inplace=True)

df

for index, row in df.iterrows():
    df.loc[index, 'Tahun_lahir'] = row['TTL'][-4:]
df

from datetime import datetime
now = datetime.now()

now.year
for index, row in df.iterrows():
    df.loc[index, 'Umur']=now.year - int (row['Tahun_lahir'])
df

for index, row in df.iterrows():
    df.loc[index, 'Masa_studi']=row['Lulus'] - row['Masuk']
df

d_train = df[['Nim','Umur','IPK','Masa_studi','Lama_tunggu','Gaji','Toefl']].reset_index(drop=True)
d_train

#import library yang akan digunakan
from IPython.display import Image
from sklearn.impute import SimpleImputer
from sklearn import tree
from subprocess import check_call
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
import numpy as np

d_train = df[['Nim','Umur','IPK','Masa_studi','Lama_tunggu','Gaji','Toefl']].reset_index(drop=True)
d_train

for index, row in d_train.iterrows():
    if row['Lama_tunggu'] >=2:
        d_train.loc[index, 'LamaTunggu'] = 'lama'
    elif row['Lama_tunggu'] >=1:
        d_train.loc[index, 'LamaTunggu'] = 'sedang'
    else:
        d_train.loc[index, 'LamaTunggu'] = 'cepat'
d_train

y = d_train['LamaTunggu'].values
y

columns = ['IPK', 'Toefl','Masa_studi','Umur']
features = d_train[list(columns)].values
features

imputer = SimpleImputer(missing_values= np.NAN, strategy= 'mean', fill_value=None, verbose=0, copy=True)
x = imputer.fit_transform(features)
x

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.4)

clf = tree.DecisionTreeClassifier(criterion='entropy')
clf = clf.fit(x_train, y_train)
predict = clf.predict(x_test)

with open("Graph_tree.dot", 'w') as f:
    f = tree.export_graphviz(clf, out_file=f, feature_names = columns, filled=True, rounded=True, special_characters = True)

check_call(['dot', '-Tpng', 'Graph_tree.dot', '-o', 'Graph_tree.png'])

Image(filename='Graph_tree.png')

import seaborn as sns
import matplotlib.pyplot as plt
f, ax = plt.subplots(figsize=(5,3))
sns.heatmap(confusion_matrix(y_test, predict), annot=True, fmt='.0f', ax=ax)
plt.xlabel("predict")
plt.ylabel("actual")
plt.show

from sklearn.metrics import classification_report
print(classification_report(y_test, predict))

from sklearn.metrics import accuracy_score
accuracy_score(y_test, predict)



